import { ChatTurn, SummaryLanguage } from "types";
/**
 * A hook that exposes:
 *  - sendMessage: a request utility for sending a text string to the query API
 *  - activeMessage: an object representing a message that the platform has not completed responding to yet
 *  - messageHistory: an array of previous messages
 *  - isLoading: a boolean indicating a pending response from the platform
 *  - isStreamingResponse: a boolean indicating that the platform is currently streaming data to the client
 *  - startNewConversation: a utility method for clearing the chat context
 *  - hasError: a boolean indicating an error was encountered while sending a message to the platform
 */
export declare const useChat: (customerId: string, corpusIds: string[], apiKey: string, useStreaming?: boolean, language?: SummaryLanguage) => {
    sendMessage: ({ query, isRetry }: {
        query: string;
        isRetry?: boolean | undefined;
    }) => Promise<void>;
    activeMessage: ChatTurn | null;
    messageHistory: ChatTurn[];
    isLoading: boolean;
    isStreamingResponse: boolean;
    startNewConversation: () => void;
    hasError: boolean;
};
